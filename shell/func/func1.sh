#!/bin/bash

:<<comment
1.bash的函数其实是一个进程组
2.函数参数
   - $1, $2, ... $N: 第N个参数
   - "$@" 被扩展为 "$1" "$2" ... "$N"等
   - "$*" 被扩展为 "$1c$2c$3", 其中c为IFS的第一个字符. 用得很少(因为他把参数当做单个字符串)
3.返回值(其实就是进程组的最后退出状态, 获取方式为$?), bash是通过标准输出与进程替换来达到返回值的效果的
comment

:<<comment
1、必须在调用函数地方之前，声明函数，shell脚本是逐行运行。不会像其它语言一样先预编译。一次必须在使用函数前先声明函数。
2、通过这种调用方法，我们清楚知道，在shell中 单括号里面，可以是：命令语句。 因此，我们可以将shell中函数，看作是定义一个新的命令，它是命令，因此 各个输入参数直接用 空格分隔。 一次，命令里面获得参数方法可以通过：\$0…\$n得到。 \$0代表函数本身。
3、函数返回值，只能通过\$? 系统变量获得，直接通过=,获得是空值。其实，我们按照上面一条理解，知道函数是一个命令，在shell获得命令返回值，都需要通过\$?获得。
comment

function f1 {
  echo "$@";
  echo "$*";
  echo "$0,$1, $2";
  return 2;   # 进程组退出状态
}

result=$(f1 a b c); # 调用函数 
echo "status = $?"
echo "result = [$result]";

f1 aa bb cc; # 调用函数 
