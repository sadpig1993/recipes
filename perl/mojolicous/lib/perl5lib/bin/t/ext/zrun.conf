################################################
# 属性定义
# [property]
# apphome =
# 
# 核心配置
# [kernel]
# apphome       -- 项目home ~/workspace/myprj
# pidfile       -- ${apphome}/log/myprj.pid
# mode          -- process_tree   前台模式
#                  logger         后台模式
#                  loggerd        后台模式+Loggerd子进程
# logger_name   -- loggerd模式下Loggerd进程的名称
# logurl        -- 主日志的日志路径
# loglevel      -- 日志级别
# channel       -- 管道列表: chnl_a,chnl_b
# name          -- 主进程显示名称: Zprg
# context       -- MyContext arg1 arg2 ... argn
#                  主进程与子进程共享资源模块，zrun将通过加载模块来获得共享资源
# main          -- Util::Run::MyMain handler | arg1 arg2 arg3
# args          -- t t t
#
# 模块配置
# [module-a]
# reader    --  从哪里读
# writer    --  往哪里写
# mreader   --  multi reader
# mwriter   --  multi writer
# code      --  模块代码 或 文件：My::Run handler | arglist str
# para      --  参数[]
# reap      --  回收
# size      --  启动几个进程
################################################
#--------------------------------------------
# 属性
#--------------------------------------------
[property]
apphome     = /Users/zhouchao/workspace/perl5lib/Util/bin/t/ext
utilhome    = /Users/zhouchao/workspace/perl5lib/Util

#--------------------------------------------
# 核心
#--------------------------------------------
[kernel]
pidfile     = ${apphome}/Zext.pid
mode        = logger
logname     =
logurl      = file://${apphome}/Zext.log
loglevel    = DEBUG
channel     = pipe
name        = Zext
context     = Util::Run::Context::Hary -f context.conf
main        = Util::Run::Main main | 1 2 3 4
args        = t t t

#--------------------------------------------
# 模块reader
#--------------------------------------------
[Zwriter]
writer      = pipe
code        = ${utilhome}/Run/Child/writer.pl
para        = x y z
reap        = 1
size        =

#--------------------------------------------
# 模块reader
#--------------------------------------------
[Zreader]
reader      = pipe
code        = ${utilhome}/Run/Child/reader.pl
para        = u y w
reap        = 1
size        =
k1          = hary
k2          = zhou

#--------------------------------------------
# 模块worker
#--------------------------------------------
[Zworker]
code        = ${utilhome}/Run/Child/worker.pl
para        = u y w
reap        = 1
size        =
k1          = v1
k2          = v2

